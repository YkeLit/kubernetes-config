fullnameOverride: test-minio
nameOverride: test-minio
ingress:
  annotations:
    traefik.ingress.kubernetes.io/router.entrypoints: websecure
    traefik.ingress.kubernetes.io/router.tls: "true"
    traefik.ingress.kubernetes.io/router.tls.certresolver: jet
  enabled: true
  hostname: test-con.apps.jet.work
  ingressClassName: "traefik"
  path: /
  pathType: Prefix
  servicePort: minio-console
  tls: true
apiIngress:
  annotations:
    traefik.ingress.kubernetes.io/router.entrypoints: websecure
    traefik.ingress.kubernetes.io/router.tls: "true"
    traefik.ingress.kubernetes.io/router.tls.certresolver: jet
  enabled: true
  hostname: test-minio.apps.jet.work
  ingressClassName: traefik
  path: /
  pathType: Prefix
  servicePort: minio-api
  tls: true
auth:
  rootPassword: ZDhmM2IwZGViMjA0MTc0
  rootUser: admin
clientImage:
  tag: 2023.5.4-debian-11-r1
extraVolumeMounts: []
extraVolumes: []
global:
  storageClass: nfs-storage
image:
  tag: 2023.5.4-debian-11-r1
mode: standalone
nodeAffinityPreset:
  key: kubernetes.io/hostname
  type: soft
  values:
  - k8s-worker1
persistence:
  accessModes:
  - ReadWriteOnce
  enabled: true
  mountPath: /data
  size: 8Gi
  storageClass: nfs-storage
podAnnotations:
  prometheus.io/path: /minio/v2/metrics/cluster
  prometheus.io/port: "9000"
  prometheus.io/scrape: "true"
provisioning:
  extraCommands:
  - mc anonymous set download provisioning/minio-public
  enabled: true
  policies:
    - name: backup
      statements:
        - resources:
            - "arn:aws:s3:::backup/*"
          actions:
            - "s3:*"
          effect: "Allow"
    - name: jet
      statements:
        - resources:
            - "arn:aws:s3:::minio-public/*"
            - "arn:aws:s3:::minio-private/*"
          actions:
            - "s3:*"
          effect: "Allow"
  users:
    - username: backup-man
      password: AAqEqVsInV4SoYWSgHyL7C+VlJc=
      disable: false
      policies:
        - backup
      setPolicies: true
    - username: jet
      password: LCgYcZor/5chU2RTo9bN/CJ10qM=
      disable: false
      policies:
        - jet
      setPolicies: true
  buckets:
    - name: backup
      region: minio
    - name: minio-public
      region: minio
    - name: minio-private
      region: minio
